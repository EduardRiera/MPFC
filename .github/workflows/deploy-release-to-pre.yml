name: deploy-release-to-pre
run-name: Deploy ${{github.ref_name}} to PRE by @${{ github.actor }}
#   deploy the published release to PRE D365 environment

on:
  release:
      types: [published]
    
permissions:
  contents: write
  
jobs:
  deploy-release-to-pre:
    runs-on: windows-latest
    environment: PRE        

    steps:
    - name: checkout action
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true

    #- name: who-am-i action
      #uses: microsoft/powerplatform-actions/who-am-i@v0
      #with:
       # environment-url: ${{vars.ENVIRONMENT_URL}}
        #app-id: ${{vars.CLIENT_ID}}
        #client-secret: ${{ secrets.CLIENT_SECRET }}
        #tenant-id: ${{vars.TENANT_ID}}

    # - name: backup-environment action
      # uses: microsoft/powerplatform-actions/backup-environment@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # backup-label: 'Before deploying ${{github.ref_name}}'

    # - name: import-managed-solution action
      # uses: microsoft/powerplatform-actions/import-solution@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # solution-file: ${{vars.SOLUTION_NAME}}
        # force-overwrite: true
        # publish-changes: true

    # - name: upload-paportal action
      # uses: microsoft/powerplatform-actions/upload-paportal@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # upload-path: ${{vars.PORTAL_PATH}}
        # deployment-profile: pre

    # - name: backup-environment action
      # uses: microsoft/powerplatform-actions/backup-environment@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # backup-label: 'After deploying ${{github.ref_name}}'

    - name: generate-pre-tag action
      run: echo "pre-tag=PRE-$(date +%Y%m%d%H%M%S)" >> $env:GITHUB_ENV

    - name: set-pre-tag action  
      run: |
        git tag ${{env.pre-tag}}
        git push origin ${{env.pre-tag}}
        
    - name: write-markdown
      shell: powershell
      run: |
         $plugins = ""
         Get-ChildItem -Path "${{vars.SOLUTION_DETAIL_FOLDER}}/${{vars.SOLUTION_NAME}}/PluginAssemblies" -Recurse -Filter *.dll | ForEach-Object {
              $dll = Get-ItemProperty -Path $_.FullName -Name VersionInfo
              $plugins += "{0}|{1}|{2}`n" -f $_.Name, $dll.VersionInfo.InternalName, $dll.VersionInfo.FileVersion
         }
         
         $markdown = @"
            # Release ${{github.ref_name}}
          
            ## Included Plugins
            $plugins
            
            Installed on ${{env.pre-tag}} by [run ${{github.run_id}}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
         "@
         
         $markdown | Out-File -Encoding UTF8 "temp.md"      

    - name: update-release-notes
      env:
        GH_TOKEN: ${{ github.token }}      
      run: | 
          gh release edit ${{github.ref_name}} --notes "${{env.markdown}}"

