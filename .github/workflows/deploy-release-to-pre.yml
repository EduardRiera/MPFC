name: deploy-release-to-pre
run-name: Deploy ${{github.ref_name}} to PRE by @${{ github.actor }}
#   deploy the published release to PRE D365 environment

on:
  release:
      types: [published]
    
permissions:
  contents: write
  
jobs:
  deploy-release-to-pre:
    runs-on: windows-latest
    environment: PRE        

    steps:
    - name: checkout action
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true

    #- name: who-am-i action
      #uses: microsoft/powerplatform-actions/who-am-i@v0
      #with:
       # environment-url: ${{vars.ENVIRONMENT_URL}}
        #app-id: ${{vars.CLIENT_ID}}
        #client-secret: ${{ secrets.CLIENT_SECRET }}
        #tenant-id: ${{vars.TENANT_ID}}

    # - name: backup-environment action
      # uses: microsoft/powerplatform-actions/backup-environment@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # backup-label: 'Before deploying ${{github.ref_name}}'

    # - name: import-managed-solution action
      # uses: microsoft/powerplatform-actions/import-solution@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # solution-file: ${{vars.SOLUTION_NAME}}
        # force-overwrite: true
        # publish-changes: true

    # - name: upload-paportal action
      # uses: microsoft/powerplatform-actions/upload-paportal@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # upload-path: ${{vars.PORTAL_PATH}}
        # deployment-profile: pre

    # - name: backup-environment action
      # uses: microsoft/powerplatform-actions/backup-environment@v0
      # with:
        # environment-url: ${{vars.ENVIRONMENT_URL}}
        # app-id: ${{vars.CLIENT_ID}}
        # client-secret: ${{ secrets.CLIENT_SECRET }}
        # tenant-id: ${{vars.TENANT_ID}}
        # backup-label: 'After deploying ${{github.ref_name}}'

    - name: get-plugins-info
      shell: powershell
      run: |
         echo "plugininfo<<EOF" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append    
         Get-ChildItem -Path "${{vars.SOLUTION_DETAIL_FOLDER}}/${{vars.SOLUTION_NAME}}/PluginAssemblies" -Recurse -Filter *.dll | ForEach-Object {
              $dll = Get-ItemProperty -Path $_.FullName -Name VersionInfo
              $output = "{0,-40} {1,-40} {2}`n" -f $_.Name, $dll.VersionInfo.InternalName, $dll.VersionInfo.FileVersion
              echo "$output" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append    
         }
         echo "EOF" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append    

    - name: generate-pre-tag action
      run: echo "pre-tag=PRE-$(date +%Y%m%d%H%M%S)" >> $env:GITHUB_ENV

    - name: set-pre-tag action  
      run: |
        git tag ${{env.pre-tag}}
        git push origin ${{env.pre-tag}}
        
    - name: get-releaseID
      id: get-release
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/${{github.repository}}/releases/tags/${{github.ref_name}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    # Generate env variables to easily access the contribution data
    - name: Store contribution data in env vars
      run: | 
          echo "releaseid=${{ fromJson(steps.get-release.outputs.data).id }}" >> $env:GITHUB_ENV


    - name: Update Release
      uses: octokit/request-action@v2.x
      with:
        route: PATCH /repos/${{github.repository}}/releases/${{env.releaseid}}
        body: |
          # Release ${{github.ref_name}}
          
          ## Included Plugins:
          {{env.plugininfo | toJSON}}
         
          ## Installed on PRE
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
